# TEST configuration file for the REVEAL Social Media Client Framework Storm Local cluster
#
# Please read the instructions below on how to configure the example Storm
#
# Vadim 10.02.2014

# Description( [storm-rabbitmq-config] ): Storm RabbitMQ configuration (these configuration parameters should be consistent with RabitMQ broker installed on your machine, 
# as well as with another entity that will be publishing messages to a RabbitMQ for the Storm processing e.g. some entity will be publishing messages to RabbitMQ queue, Storm spout need to 
# know that queue in order to start received message processing etc).
#  - rmqhost: RabbitMQ host 
#  - rmqport: RabbitMQ port
#  - rmqusername: RabbitMQ Username
#  - rmqpassword: RabbitMQ Password
#  - rmqheartbeat: RabbitMQ heartbeat (ensure that the application layer promptly finds out about disrupted connections (and also completely unresponsive peers)
#  - rmqqueuename: RabbitMQ queue name
#  - rmqexchange: RabbitMQ exchange
#  - rmqexchangetype: RabbitMQ exchange type
#  - rmqrouting: RabbitMQ routing
#  - amqpschemeencoding: AMQP Storm Spout message encoding
[storm-rabbitmq-config]
rmqhost=localhost
rmqport=5672
rmqusername=guest
rmqpassword=guest
rmqheartbeat=10
rmqqueuename=test
rmqexchangetype=fanout
rmqrouting=test-routing
rmqpersistence=false
amqpschemeencoding=utf-8


# Description( [storm-topology-configuration] ): Storm topology configuration parameters
#  - topology_debug: Boolean flag that will enable/disable Topology debug information (NOTE: Storm topology is very verbose itself, therefore the Topology debug is set to false)
[storm-topology-configuration]
topology_debug=false


# Description( [storm-spout-configuration] ): Storm AMQP Spout configuration parameters
#  - spout_debug: Boolean flag that will enable/disable Spout debug information (NOTE: as was mentioned earlier, Storm topology is very verbose itself, therefore the Spout debug is also set to false)
#  - spout_rmqprefetch: RabbitMQ AMQP Spout prefetch n-amount of messages from the Queue. Since the streaming data can fill up the message queue quite quickly, the n-amount of prefetched messages need to 
#    be realistic to the amount of published messages (to avoid queue "overfilling")
#  - spout_max_spout_pending: Applies to the above (spout_rmqprefetch) where n-amount of messages need to be prefetched, but in this case from the RabbitMQ queue message consumer point of view. Make sure that the value is the same as RabbitMQ 
#    prefetch count (MaxSpoutPending <= Prefetch). 
[storm-spout-configuration]
spout_debug=false
spout_rmqprefetch=200
spout_max_spout_pending=200


# Description( [emit-fields-names] ): Name of the Storm Spout/Bolt emitted messages (simply a String) which does not really have any significant meaning on overall Storm Topology (as well as Spout/Bolt) functionality
#  - example_emit_fields_id: Name of the Storm Spout/Bolt emitted messages
[emit-fields-names]
example_emit_fields_id=object
